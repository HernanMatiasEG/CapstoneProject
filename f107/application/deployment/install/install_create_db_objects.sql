prompt --application/deployment/install/install_create_db_objects
begin
--   Manifest
--     INSTALL: INSTALL-Create DB Objects
--   Manifest End
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2020.10.01'
,p_release=>'20.2.0.00.20'
,p_default_workspace_id=>1191909882484463
,p_default_application_id=>107
,p_default_id_offset=>21836620500956796
,p_default_owner=>'BILL_AND_COLL'
);
wwv_flow_api.create_install_script(
 p_id=>wwv_flow_api.id(46752777163438808154)
,p_install_id=>wwv_flow_api.id(46757835926195345171)
,p_name=>'Create DB Objects'
,p_sequence=>20
,p_script_type=>'INSTALL'
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'create sequence eba_spatial_id',
'/',
'',
'--------------------------------------------------------------------------------',
'create table eba_spatial_countries (',
'  code varchar2(2) not null,',
'  country_name varchar2(50) not null,',
'  gcdr_supported char(1) not null,',
'  map_centerx number not null,',
'  map_centery number not null,',
'  map_zoom number not null,',
'  constraint eba_spatial_countries_pk primary key (code),',
'  constraint eba_spatial_gcdrsupp_ch check (gcdr_supported in (''Y'', ''N''))  ',
')',
'/         ',
'    ',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''US'',''USA'', ''Y'', -100, 38, 3)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''CA'',''Canada'', ''Y'', -95, 50, 3)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''DE'',''Germany'', ''Y'', 10, 50, 5)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''FR'',''France'',''Y'', 5, 46,5)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''UK'',''United Kingdom'', ''Y'', -2,54,5)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''NL'',''Netherlands'', ''Y'', 5,52,6)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''BE'',''Belgium'',''Y'', 4.5, 51, 6)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''AT'',''Austria'', ''Y'', 14,48,6)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''CH'',''Switzerland'', ''Y'', 9,47,7)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''ES'',''Spain'', ''Y'',-3,40,5)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''PT'',''Portugal'', ''Y'', -8,40,6)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''IL'',''Israel'', ''N'', 37,33,6)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''RU'',''Russian Federation'', ''Y'', 37,55,4)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''EE'',''Estonia'', ''Y'', 25,58,6)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''IN'',''India'', ''Y'', 79,20,4)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''MX'',''Mexico'', ''Y'', -102, 23,5)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''AU'',''Australia'', ''Y'', 135,-27,4)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''BR'',''Brazil'', ''Y'', -52, -16, 4)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''CL'',''Chile'', ''Y'', -71, -34, 5)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''CZ'',''Czech Republic'', ''Y'', 16, 50, 6 )',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''NO'',''Norway'', ''Y'', 10, 61,4)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''FI'',''Finland'', ''Y'', 28,65.5,4)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''DK'',''Denmark'', ''Y'', 9.5,55.5,5)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''HK'',''Hong Kong'', ''Y'', 114, 22.5, 8)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''JP'',''Japan'', ''N'', 139,36,5)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''CN'',''People''''s Republic of China'', ''N'', 110, 28, 4)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''IE'',''Ireland'', ''Y'', -6, 53.5, 6)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''LV'',''Latvia'', ''Y'', 23, 57.5, 6)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''RO'',''Romania'', ''Y'',26,45,6)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''CO'',''Colombia'', ''Y'', -73, 4.5,5)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''PL'',''Poland'', ''Y'', 18,51,5 )',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''AE'',''United Arab Emirates'', ''Y'', 55, 24, 7)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''HU'',''Hungary'', ''Y'', 19,47.5,6)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''SA'',''Saudi Arabia'', ''Y'', 47,25,4)',
'/',
'insert into eba_spatial_countries (code, country_name, gcdr_supported, map_centerx, map_centery, map_zoom) values (''ZA'',''South Africa'', ''Y'', 24,-30,5)',
'/',
'  ',
'commit',
'/',
'',
'--------------------------------------------------------------------------------    ',
'    ',
'create table eba_spatial_defaults(',
'    param         varchar2(100) not null primary key,',
'    value         varchar2(100) not null',
')',
'/',
'    ',
'insert into eba_spatial_defaults (param, value) values (''UNIT_SYSTEM'', ''METRIC'')',
'/',
'insert into eba_spatial_defaults (param, value) values (''DEF_COUNTRY'', ''US'')',
'/',
'    ',
'commit',
'/',
' ',
'--------------------------------------------------------------------------------',
'    ',
'create table eba_spatial_aoi(',
'  id                  number(10) not null,',
'  aoi_name            varchar2(200) not null,',
'  datetime            timestamp with time zone,',
'  owner               varchar2(200),',
'  geometry            sdo_geometry,',
'  constraint eba_spatial_aoi_pk primary key (id)',
')',
'/',
'',
'create trigger eba_spatial_aoi_bi',
'before insert on eba_spatial_aoi',
'for each row',
'begin',
'  select eba_spatial_id.nextval into :new.id from dual;',
'  :new.datetime := systimestamp;',
'end;',
'/',
'',
'begin',
'  apex_spatial.insert_geom_metadata_lonlat(',
'    p_table_name   => ''EBA_SPATIAL_AOI'',',
'    p_column_name  => ''GEOMETRY'' );',
'end;',
'/',
'    ',
'create index EBA_SPATIAL_AOI_SX on EBA_SPATIAL_AOI (GEOMETRY)',
'indextype is MDSYS.SPATIAL_INDEX',
'/',
'',
'--------------------------------------------------------------------------------',
'',
'create table eba_spatial_addresses(',
'  id                  number(10) not null,',
'  addr_name           varchar2(200) not null,',
'  addr_street         varchar2(200),',
'  addr_postal_code    varchar2(20),',
'  addr_city           varchar2(200) not null,',
'  addr_state          varchar2(200),',
'  addr_country        varchar2(200) not null,',
'  addr_type           varchar2(20) not null',
'                      constraint eba_spatial_addresses_type_ck',
'                      check (addr_type in (''SUPPLIER'', ''CUSTOMER'')),',
'  owner               varchar2(200),',
'  datetime            timestamp with time zone,',
'  addr_location       sdo_geometry,',
'  constraint eba_spatial_addresses_pk primary key (id)',
')',
'/',
'',
'create trigger eba_spatial_addresses_bi',
'before insert on eba_spatial_addresses',
'for each row',
'begin',
'  select eba_spatial_id.nextval into :new.id from dual;',
'  :new.datetime := systimestamp;',
'end;',
'/',
'    ',
'insert into eba_spatial_addresses (addr_name, addr_street, addr_city, addr_country, addr_type, owner)',
'values (''Oracle Corporation'', ''500, Oracle Parkway'', ''Redwood City'', ''US'', ''CUSTOMER'', ''EBA'')',
'/',
'',
'insert into eba_spatial_addresses (addr_name, addr_street, addr_postal_code, addr_city, addr_country, addr_type, owner, addr_location)',
'    values (''Oracle Deutschland B.V. & Co KG'', ''Riesstr. 25'', ''80992'', unistr(''M\00FCnchen''), ''DE'', ''CUSTOMER'', ''EBA'', SDO_GEOMETRY(2001, 4326, SDO_POINT_TYPE(11.5367, 48.1801, NULL), NULL, NULL))',
'/',
'    ',
'insert into eba_spatial_addresses (addr_name, addr_street, addr_postal_code, addr_city, addr_country, owner, addr_type, addr_location, addr_state)',
'values (''Oracle UK'', ''510 Oracle Parkway'', ''RG6 1'', ''Reading'', ''UK'', ''EBA'', ''CUSTOMER'', SDO_GEOMETRY(2001, 4326, SDO_POINT_TYPE(-0.9382, 51.46, NULL), NULL, NULL), ''Berkshire'')',
'/',
'',
'insert into eba_spatial_addresses (addr_name, addr_street, addr_postal_code, addr_city, addr_country, owner, addr_type, addr_location)',
'values (''Oracle Austria'', ''Wagramer Str. 17-19'', ''1220'', ''Wien'', ''AT'', ''EBA'', ''SUPPLIER'', SDO_GEOMETRY(2001, 4326, SDO_POINT_TYPE(16.4201, 48.2341, NULL), NULL, NULL))',
'/',
'',
'commit',
'/',
'',
'begin',
'  apex_spatial.insert_geom_metadata_lonlat(',
'    p_table_name   => ''EBA_SPATIAL_ADDRESSES'',',
'    p_column_name  => ''ADDR_LOCATION''',
'  );',
'end;',
'/',
'',
'create index EBA_SPATIAL_ADDRESSES_SX on EBA_SPATIAL_ADDRESSES (ADDR_LOCATION)',
'indextype is MDSYS.SPATIAL_INDEX',
'/',
'--------------------------------------------------------------------------------',
'',
'create or replace package eba_spatial_sample is',
'  function get_version return varchar2;',
'',
'  function geom_to_string(',
'    p_geom in sdo_geometry',
'  ) return varchar2;',
'',
'  function make_shortstring(',
'    p_text in varchar2, ',
'    p_len in number',
'  ) return varchar2;',
'',
'  function geometry_from_wkt(',
'    p_wkt in clob, ',
'    p_srid in number',
'  ) return sdo_geometry;',
'',
'  function geometry_from_xml(',
'    p_sdogeom_xml in varchar2',
'  ) return sdo_geometry;',
'',
'  function point(',
'    p_lon in number, ',
'    p_lat in number',
'  ) return sdo_geometry;',
'',
'  procedure get_map_defaults(',
'    p_def_country out varchar2,',
'    p_unit_system out varchar2,',
'    p_mapcenter   out varchar2,',
'    p_zoomlevel   out varchar2',
'  );',
'',
'  procedure reset_tables;',
'  ',
'  function get_star_rating_html( p_stars in number ) return varchar2;',
'',
'end eba_spatial_sample;',
'/',
'',
'create or replace package body eba_spatial_sample is',
'  function get_version return varchar2 is',
'  begin',
'    return ''1.1'';',
'  end get_version;',
'    ',
'    ',
'  function get_star_rating_html( p_stars in number ) return varchar2 is',
'      l_html varchar2(32767) := '''';',
'  begin',
'      if p_stars is null then ',
'         return null;',
'      end if;',
'      for i in 1..p_stars loop',
'          l_html := l_html || ''<span class="fa fa-star" style="color: red"></span>'';',
'      end loop;',
'      for i in (p_stars + 1)..5 loop',
'          l_html := l_html || ''<span class="fa fa-star" style="color: #e0e0e0"></span>'';',
'      end loop;',
'      return l_html;',
'  end get_star_rating_html;',
'  ',
'  function geom_to_string(',
'    p_geom in sdo_geometry',
'  ) return varchar2 is',
'  ',
'    l_lonlatstring varchar2(100);',
'    l_num          number;',
'    l_rem          number;',
'    l_dir          char(1);',
'  ',
'    function make_part(p_num in number) return varchar2 is',
'      l_num number;',
'      l_rem number;',
'      l_part varchar2(100);',
'    begin',
'      l_num := p_num;',
'      l_rem := l_num - floor(l_num);',
'      l_part := l_part || to_char(floor(l_num))||unistr(''\00B0''); -- 00B0 is the degree sign',
'      l_num := l_rem * 60;',
'      l_rem := l_num - floor(l_num);',
'      l_part := l_part || to_char(floor(l_num), ''FM00'')||'''''''';',
'      l_num := l_rem * 60;',
'      l_rem := l_num - floor(l_num);',
'      l_part := l_part || to_char(floor(l_num), ''FM00'')||''"'';',
'      return l_part;',
'    end make_part;',
'  begin',
'    if p_geom is not null then',
'      if p_geom.sdo_srid in (4326,8307) and p_geom.sdo_gtype in (2001, 3001, 3301) then',
'        if p_geom.sdo_point.x < 0 then l_dir := ''W''; else l_dir := ''E''; end if;',
'        l_lonlatstring := l_lonlatstring || make_part(abs(p_geom.sdo_point.x)) || '' '' || l_dir || '' - '';',
'        if p_geom.sdo_point.y < 0 then l_dir := ''S''; else l_dir := ''N''; end if;',
'        l_lonlatstring := l_lonlatstring || make_part((p_geom.sdo_point.y)) || '' '' || l_dir;',
'      else',
'        l_lonlatstring := ''- NOT A POINT GEOMETRY -'';',
'      end if;',
'    end if;',
'    return l_lonlatstring;',
'  end geom_to_string;   ',
'',
'  function make_shortstring(',
'    p_text in varchar2, ',
'    p_len in number',
'  ) return varchar2 is',
'  begin',
'    if length(p_text) <= p_len then',
'      return p_text;',
'    else',
'      return substr(p_text, 1, p_len - 4) || '' ...'';',
'    end if;',
'  end make_shortstring;',
'',
'  function geometry_from_wkt(p_wkt in clob, p_srid in number) return sdo_geometry is',
'    l_geom sdo_geometry;',
'  begin',
'    l_geom := sdo_util.rectify_geometry(sdo_geometry(p_wkt, p_srid),1);',
'    if p_srid != 4326 then',
'      l_geom := sdo_cs.transform(l_geom, 4326);',
'    end if;',
'    return l_geom;',
'  end geometry_from_wkt;',
'',
'  function geometry_from_xml(p_sdogeom_xml in varchar2) return sdo_geometry is',
'    l_geom      sdo_geometry;',
'    l_xml       xmltype := xmltype(p_sdogeom_xml);',
'    l_gtype     number;',
'    l_srid      number;',
'    l_elem_info sdo_elem_info_array := sdo_elem_info_array();',
'    l_ordinates sdo_ordinate_array  := sdo_ordinate_array();',
'  begin',
'    select gtype, srid into l_gtype, l_srid',
'    from xmltable(',
'      ''/SDO_GEOMETRY''',
'      passing l_xml',
'      columns ',
'        gtype number(5)  path ''SDO_GTYPE/text()'',',
'        srid  number(10) path ''SDO_SRID/text()''',
'    );',
'    for e in (',
'      select elem_info',
'      from xmltable(',
'        ''/SDO_GEOMETRY/SDO_ELEM_INFO/N''',
'        passing l_xml',
'        columns elem_info varchar2(100) path ''/N/text()''',
'      )',
'    ) loop',
'        l_elem_info.extend(1);',
'        l_elem_info(l_elem_info.count) := ',
'          to_number(e.elem_info, ''9999999999D999999999999999999'', ''nls_numeric_characters=''''.,'''''');',
'    end loop;',
'           ',
'    for o in (',
'      select ordinate',
'      from xmltable(',
'        ''/SDO_GEOMETRY/SDO_ORDINATES/N''',
'        passing l_xml',
'        columns ordinate varchar2(100) path ''/N/text()''',
'      )',
'    ) loop',
'        l_ordinates.extend(1);',
'        l_ordinates(l_ordinates.count) := ',
'          to_number(o.ordinate, ''9999999999D9999999999999999999'', ''nls_numeric_characters=''''.,'''''');',
'    end loop;',
'    l_geom := mdsys.sdo_geometry(l_gtype, l_srid, null, l_elem_info, l_ordinates);',
'    l_geom := sdo_util.rectify_geometry(l_geom, 1);',
'    if l_srid != 4326 then',
'      l_geom := sdo_cs.transform(l_geom, 4326);',
'    end if;',
'',
'    if sdo_util.getnumvertices(l_geom) > 41 then',
'        raise_application_error(-20000, ''Polygon is too complex for this demonstration environment.'');',
'    end if;',
'',
'    return l_geom;',
'  end geometry_from_xml;',
'',
'  function point(',
'    p_lon in number,',
'    p_lat in number',
'  ) return sdo_geometry is',
'  begin',
'      -- return apex_spatial.point(p_lon, p_lat);',
'    return sdo_geometry(2001, 4326, sdo_point_type(p_lon, p_lat, null), null, null);',
'  end point;',
'',
'',
'  procedure get_map_defaults(',
'    p_def_country out varchar2,',
'    p_unit_system out varchar2,',
'    p_mapcenter   out varchar2,',
'    p_zoomlevel   out varchar2',
'  ) is ',
'begin',
'begin',
'  select value into p_def_country',
'  from eba_spatial_defaults',
'  where param = ''DEF_COUNTRY'';',
'exception when NO_DATA_FOUND then p_def_country := ''US'';',
'end;',
'begin',
'  select value into p_unit_system',
'  from eba_spatial_defaults',
'  where param = ''UNIT_SYSTEM'';',
'exception when NO_DATA_FOUND then p_unit_system := ''METRIC'';',
'end;',
'begin',
'select ',
'  to_char(map_centerx, ''FM990D0'', ''nls_numeric_characters=''''.,'''''')||',
'  '',''||',
'  to_char(map_centery, ''FM990D0'', ''nls_numeric_characters=''''.,''''''),',
'  map_zoom',
'into p_mapcenter, p_zoomlevel',
'from eba_spatial_countries',
'where code = p_def_country;',
'exception',
'  when NO_DATA_FOUND then ',
'    p_zoomlevel := 1;',
'    p_mapcenter := ''-100,38'';',
'end;',
'end get_map_defaults;',
'',
'procedure reset_tables',
'is',
'begin',
'    delete from eba_spatial_aoi;',
'    delete from eba_spatial_addresses;',
'',
'    insert into eba_spatial_addresses (addr_name, addr_street, addr_city, addr_country, addr_type, owner)',
'    values (''Oracle Corporation'', ''500, Oracle Parkway'', ''Redwood City'', ''US'', ''CUSTOMER'', ''EBA'');',
'',
'    insert into eba_spatial_addresses (addr_name, addr_street, addr_postal_code, addr_city, addr_country, addr_type, owner, addr_location)',
'    values (''Oracle Deutschland B.V. & Co KG'', ''Riesstr. 25'', ''80992'', unistr(''M\00FCnchen''), ''DE'', ''CUSTOMER'', ''EBA'', SDO_GEOMETRY(2001, 4326, SDO_POINT_TYPE(11.5367, 48.1801, NULL), NULL, NULL));',
'    ',
'    insert into eba_spatial_addresses (addr_name, addr_street, addr_postal_code, addr_city, addr_country, owner, addr_type, addr_location, addr_state)',
'    values (''Oracle UK'', ''510 Oracle Parkway'', ''RG6 1'', ''Reading'', ''UK'', ''EBA'', ''CUSTOMER'', SDO_GEOMETRY(2001, 4326, SDO_POINT_TYPE(-0.9382, 51.46, NULL), NULL, NULL), ''Berkshire'');',
'',
'    insert into eba_spatial_addresses (addr_name, addr_street, addr_postal_code, addr_city, addr_country, owner, addr_type, addr_location)',
'    values (''Oracle Austria'', ''Wagramer Str. 17-19'', ''1220'', ''Wien'', ''AT'', ''EBA'', ''SUPPLIER'', SDO_GEOMETRY(2001, 4326, SDO_POINT_TYPE(16.4201, 48.2341, NULL), NULL, NULL));',
'    ',
'end reset_tables;',
'',
'',
'end eba_spatial_sample;',
'/'))
);
wwv_flow_api.component_end;
end;
/
